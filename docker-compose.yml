version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15
    container_name: sanpedrito_db
    environment:
      POSTGRES_DB: sanpedrito_db
      POSTGRES_USER: sanpedrito_user
      POSTGRES_PASSWORD: sanpedrito_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - sanpedrito_network

  # Redis para cache (futuro uso)
  redis:
    image: redis:7-alpine
    container_name: sanpedrito_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sanpedrito_network

  # Aplicación Django
  web:
    build: .
    container_name: sanpedrito_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=sanpedrito_db
      - DB_USER=sanpedrito_user
      - DB_PASSWORD=sanpedrito_pass
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - sanpedrito_network

  # Nginx para servir archivos estáticos (producción)
  nginx:
    image: nginx:alpine
    container_name: sanpedrito_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - sanpedrito_network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  sanpedrito_network:
    driver: bridge